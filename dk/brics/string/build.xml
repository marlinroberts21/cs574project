<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="dk.brics.string" default="all" basedir=".">

    <property name="project" value="string"/>
    <property name="version" value="2.1"/>
    <property name="release" value="1"/>

    <property name="optimize" value="on"/>
    <property name="debug" value="on"/>

    <property name="public" value="${user.home}/public_html/JSA"/>

    <path id="classpath">
      <fileset dir="." includes="lib/**/*.jar"/>
    </path>

    <target name="all" depends="jar,doc"/>

    <target name="compile">
        <mkdir dir="build"/>
        <javac srcdir="src" includes="dk/**" destdir="build" source="1.5" target="1.5" optimize="${optimize}"
               debug="${debug}">
            <classpath refid="classpath"/>
        </javac>
    </target>

    <target name="jml-compile">
      <pathconvert property="CLASSPATH" refid="classpath"/>
      <echo>${CLASSPATH}</echo>
      <mkdir dir="build"/>
      <java jar="./lib/openjml.jar"
            fork="true">
        <arg value="-cp"/>
        <arg value="${CLASSPATH}"/>
        <arg value="-dir"/>
        <arg value="src/"/>
        <arg value="-no-internalSpecs"/>
        <arg value="-rac"/>
      </java>
    </target>

    <target name="jml-test" depends="jml-compile">
      <pathconvert property="CLASSPATH" refid="classpath"/>
      <java classname="org.junit.runner.JUnitCore"
            classpath="${CLASSPATH}"
            fork="true">
        <jvmarg value="-ea"/>
        <arg value="dk.brics.string.tests"/>
      </java>
    </target>

    <target name="examples" depends="jar">
        <mkdir dir="build"/>
        <javac srcdir="examples" includes="**" destdir="build" source="1.5" target="1.5" optimize="${optimize}"
               debug="${debug}" classpath="dist/${project}.jar">
            <classpath refid="classpath"/>
        </javac>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="dist"/>
        <jar jarfile="dist/${project}.jar" basedir="build" includes="dk/**/*.class"/>
        <jar jarfile="dist/${project}-src.jar" basedir="src" includes="dk/**/*.java"/>
    </target>

    <target name="clean">
        <delete dir="build"/>
        <delete dir="doc"/>
        <delete dir="dist"/>
    </target>

    <target name="tgz" depends="clean,doc">
        <property name="dir" value="${project}-${version}"/>
        <mkdir dir="${dir}"/>
        <copy todir="${dir}">
            <fileset dir="." includes="README,COPYING,build.xml"/>
        </copy>
        <mkdir dir="${dir}/dist"/>
        <copy todir="${dir}/dist">
            <fileset dir="dist"/>
        </copy>
        <mkdir dir="${dir}/doc"/>
        <copy todir="${dir}/doc">
            <fileset dir="doc"/>
        </copy>
        <mkdir dir="${dir}/src"/>
        <copy todir="${dir}/src">
            <fileset dir="src"/>
        </copy>
        <mkdir dir="${dir}/lib"/>
        <copy todir="${dir}/lib">
            <fileset dir="lib"/>
        </copy>
        <tar tarfile="${dir}-${release}.tar" basedir="." includes="${dir}/**"/>
        <gzip zipfile="${dir}-${release}.tar.gz" src="${dir}-${release}.tar"/>
        <delete file="${dir}-${release}.tar"/>
        <delete dir="${dir}"/>
    </target>

    <target name="doc" depends="jar">
        <mkdir dir="doc"/>
        <javadoc packagenames="dk.brics.string,
                                  dk.brics.string.mlfa,
                                dk.brics.string.mlfa.operations,
                                  dk.brics.string.grammar,
                               dk.brics.string.grammar.operations,
                                  dk.brics.string.stringoperations,
                                  dk.brics.string.flow,
                               dk.brics.string.flow.operations,
                                  dk.brics.string.intermediate,
                                dk.brics.string.intermediate.operations,
                                  dk.brics.string.java,
                               dk.brics.string.directedgraph,
                                  dk.brics.string.runtime,
                               dk.brics.string.charset,
                               dk.brics.string.diagnostics,
                               dk.brics.string.resolver,
                               dk.brics.string.util,
                               dk.brics.string.external,
                               dk.brics.string,annotation"
                 overview="src/overview.html"
                 sourcepath="src"
                 destdir="doc"
                 nodeprecated="true"
                 author="true"
                 notree="true"
                 nohelp="true"
                 windowtitle="dk.brics.string">
            <doctitle><![CDATA[Java String Analyzer<br>API Specification]]></doctitle>
            <bottom>
                <![CDATA[<i> Copyright &#169; 2003-2009 Anders M&oslash;ller, Aske Simon Christensen, Asger Feldthaus. </i>]]></bottom>
            <link href="http://java.sun.com/j2se/1.5/docs/api"/>
            <link href="http://www.brics.dk/automaton/doc/"/>
            <link href="http://www.sable.mcgill.ca/soot/doc/"/>
            <classpath refid="classpath"/>
        </javadoc>
    </target>

    <target name="publish" depends="tgz">
        <delete dir="${public}/doc"/>
        <mkdir dir="${public}/doc"/>
        <copy todir="${public}/doc">
            <fileset dir="doc"/>
        </copy>
        <mkdir dir="${public}/dist"/>
        <copy todir="${public}/dist">
            <fileset dir="dist"/>
        </copy>
        <mkdir dir="${public}/lib"/>
        <copy todir="${public}/lib">
            <fileset dir="lib"/>
        </copy>
        <copy file="${project}-${version}-${release}.tar.gz" todir="${public}/dist"/>
        <chmod dir="${public}" perm="go+r" includes="doc/**,doc,dist/**,dist,lib/**,lib,*.tar.gz" type="both"/>
        <chmod dir="${public}" perm="go+x" includes="doc/**,doc,dist/**,dist,lib/**,lib" type="dir"/>
    </target>

    <property name="securibench" value="bench/securibench-micro" />

    <target name="clean-bench">
        <delete dir="${securibench}/bin/securibench" />
    </target>

    <target name="compile-bench">
        <javac srcdir="${securibench}/src" destdir="${securibench}/bin" debug="true" debuglevel="lines,source">
            <classpath>
                <fileset dir="${securibench}/lib" includes="*.jar" />
            </classpath>
        </javac>
    </target>

    <target name="test-bench" depends="compile-bench,compile">
        <java classname="testcases.bench.SecuribenchMicro" fork="true">
            <classpath>
                <path refid="classpath" />
                <dirset dir="build" />
            </classpath>
            <arg value="-bin=${securibench}/bin"/>
            <arg value="-src=${securibench}/src"/>
            <arg value="-lib=${securibench}/lib/j2ee.jar"/>
            <arg value="-lib=${securibench}/lib/cos.jar"/>
            <jvmarg value="-Xmx1024m"/>
        </java>
    </target>

</project>
